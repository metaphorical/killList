#!/usr/bin/env bash

UP=$'\033[A'
DOWN=$'\033[B'


#
# Log <type> <msg>
#
log() {
  printf "  \e[0;32m%10s\033[0m : \033[0m%s\033[0m\n" $1 $2
}

#
# Exit with the given <msg ...>
#
abort() {
  printf "\n  \033[31mError: $@\033[0m\n\n" && exit 1
}


fullscreen_on() {
  #tput smcup
  stty -echo
}

fullscreen_off() {
  #tput rmcup
  stty echo
}

handle_sigint() {
  fullscreen_off
  exit $?
}

handle_sigtstp() {
  fullscreen_off
  kill -s SIGSTOP $$
}

#
# Hide cursor.
#
hide_cursor() {
  printf "\e[?25l"
}

#
# Show cursor.
#
show_cursor() {
  printf "\e[?25h"
}

#
# Kill all processes for with passed name
#

killall_by_name() {
    ps aux | grep $1 | grep -v 'kill-list' | grep -v 'grep' | awk '{print $2}' |
    while read pid
     do
      echo Killing $pid
      kill -9 $pid
    done
}

#
# Get process list for nice print
#

process_list() {
  ps aux | grep $1 | grep -v 'kill-list' | awk '{system("lsof -p " $2 "| grep cwd ")}' | awk '{printf "#%s||%s=>%s ", $2, $9, $1}'
}

#
#Get list of process PIDs
#

pid_list() {
    ps aux | grep $1 | grep -v 'kill-list' | grep -v 'grep' | awk '{print $2}'
}


#
# Display processes
#
display_process_with_selected() {
  processList=$3
  pidList=$4
  killPos=${#processList[@]}
  exitPos=$((${#processList[@]}+1))
  if test $2 -gt $exitPos; then
    menuPosition=0
  else
    menuPosition=$2
  fi

  if test ${#processList[0]} -eq 0; then
    printf "No process with name %s...\n" $1
    printf "Bye!\n"
    fullscreen_off
    exit 1
  else

    echo
    log "KillList" "$1"
    #printf "${#processList[0]}"
    log "Porcesses" "${#processList[@]}"
    printf "\e[4m Pick process to kill:\e[0m\n"
    for process in ${!processList[@]}; do
      if test $process -eq $menuPosition; then
        printf "  \e[0;32mo [$process]\033[0m ${processList[$process]}\033[0m\n"
      else
        printf "    [$process]\033[90m ${processList[$process]}\033[0m\n"
      fi
    done

    if test $menuPosition -eq $killPos; then
      printf "   \e[101m Kill all\033[0m\n"
    else
      printf "   \033[90m Kill all\033[0m\n"
    fi

    if test $menuPosition -eq $exitPos; then
      printf "   \e[0;32m exit\033[0m\n"
    else
      printf "   \033[90m exit\033[0m\n"
    fi

    echo
  
  fi
}

#
# Perform the list item action
#

activate_list_item() {
    clear
    local pidList=($(pid_list $2))
    local processList=($(process_list $2))
    if test $1 -eq $killPos; then
        printf "Killing all %s processes\n" $2
        killall_by_name $2
    elif test $1 -eq $exitPos; then
        printf "Bye!\n"
    else
        printf "Killing: %s\n" ${processList[$1]}
        kill -9 ${pidList[$1]}
        printf "Bye!\n"
    fi
}

#
# Display select list of processes and options for process of name $1
#

display_list() {
    fullscreen_on
    position=0
    processList=($(process_list $1))
    pidList=($(pid_list $1))
    exitPos=$((${#processList[@]}+1))
    clear
    display_process_with_selected $1 0 $processList $pidList

    trap handle_sigint INT
    trap handle_sigtstp SIGTSTP

    while true; do
        read -n 3 c
        case "$c" in
          $UP)
            clear
            if test $position -eq 0; then
                position=$(($exitPos))
            else
                position=$((position-1))
            fi
            display_process_with_selected $1 $position $processList $pidList
            ;;
          $DOWN)
            clear
            if test $position -eq $exitPos; then
                position=0
            else
                position=$((position+1))
            fi
            display_process_with_selected $1 $position $processList $pidList
            ;;
          *)
            activate_list_item $position $1
            fullscreen_off
            exit 1
            ;;
        esac
      done

}
if test $# -eq 0; then
    printf "Please provide process name\n"
else
  while test $# -ne 0; do
    case $1 in
      -h|--help|-H) printf "Usage:\n kill-list <process name>\n" ;;
      *) display_list $1 ;;
    esac
      shift
    done
fi
